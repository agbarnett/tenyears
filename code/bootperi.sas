/****************************************************************/
/*    NAME: bootperi.sas                                        */
/*   TITLE: Bootstrap test of periodogram values, updated for   */
/*          reproducibilty challenge                            */
/*                                                              */
/*   PROCS: GPLOT, SPECTRA, UNIVARIATE                          */
/*    DATA: MONICA (data.malefilt)                              */
/*  AUTHOR: AGB                                                 */
/*    DATE: 7/feb/2020                                          */
/*                                                              */
/****************************************************************/

%macro bootloop;
data work.boot;
   set work.res; * Changed to look at residuals after kalman filter de-trend;
   order=uniform(0);
run;
* Re-order the data;
proc sort data=work.boot;
   by centre runit order;
run;
* Add time;
data work.addtimex;
   set work.boot;
   by centre runit;
   retain time 0;
   if first.runit then time=0;
   time=time+1;
run;
* sort added 7-feb-2020;
proc sort data=work.addtimex;
   by centre runit time;
run;
data work.tapered;
   merge work.taper work.addtimex(in=a); 
   by centre runit time;
   if a;
run;
proc spectra data=work.tapered p s adjmean coef out=work.respec(keep=period p_01 cos_01 sin_01 s_01 centre runit);
   by centre runit;
   var errs;
   weights 0.1464466 0.5 0.8535534 1 0.8535534 0.5 0.1464466; * Hanning window, bandwidth=3;
run;
proc append base=work.allboot data=work.respec;
run;
%mend bootloop;

* Macro to loop through macro above;
%macro runboot;
   %do count=1 %to 1000; * Number of bootstrap loops;
   %bootloop;
   %end;
%mend runboot;

%macro centrerun(centre,runit);
** Calculate the actual periodogram (tapered);
* Taper;
data work.tapdata;
   merge work.taper work.res(in=a); 
   by centre runit time;
   if a;
run;
proc spectra data=work.tapdata out=work.realx adjmean p coef s;
   by centre runit;
   var errs;
   weights 0.1464466 0.5 0.8535534 1 0.8535534 0.5 0.1464466; * Hanning window, bandwidth=3;
run;
data work.real(drop=cos_01 sin_01);
   set work.realx;
   if period~=.;
   if period<=24;
   dummy=1;
   r=sqrt((cos_01**2)+(sin_01**2));*<-Calculate amplitude;
run;
proc freq data=work.real noprint;
   by centre runit;
   table dummy / out=work.adjcount(drop=percent);
run;
* Remove dummy data from bootstrap;
data work.remove(drop=cos_01 sin_01);
   set work.allboot; * from bootstrap test;
   if centre>0;
   if period~=.;
   if period<=24;
   dummy=1; * for merge;
   r=sqrt((cos_01**2)+(sin_01**2));*<-Calculate amplitude;
run;
* Merge in count by centre for Bonferonni correction;
proc sort data=work.remove;
   by centre runit descending period;
data work.addbonf;
   merge work.remove work.adjcount;
   by centre runit dummy;
run;
data work.centre;
   set work.addbonf;
   if centre=&centre.;
   if runit=&runit.;
*   adjust=100-(5/count); * Bonferroni adjustment;
   adjust=95; * Unadjusted;
   call symput('adjlevel',put(adjust,6.1));
run;
proc univariate data=work.centre noprint;
   by centre runit descending period;
   var r; *p_01;
   output out=work.bootupper pctlpts=(&adjlevel.) pctlpre=p pctlname=y;
run;
* Merge in actual periodogram;
data work.actual;
   merge work.real(drop=dummy) work.bootupper(in=a);
   by centre runit descending period;
   if a;
*   if centre=47 then delete;
run;
** Plot;
goptions reset=all ftext=centx htext=3 gunit=pct colors=(black) border;
%cntrname(&centre,&runit);
title; * No title for final output;
*filename graph1 "C:\temp\plots\sp&centre._&runit..eps";
*goptions reset=all ftext=centx htext=3 gunit=pct colors=(black) gunit=pct noborder
    gsfname=graph1 noprompt gsfmode=replace device=PSLEPSF fontres=presentation dash;
symbol1 color=black value=NONE i=join line=2 width=4;
symbol2 color=black value=NONE i=join;
axis1 minor=NONE label=(h=3 ' ') order=(2 to 24 by 2); *<-period;
axis2 minor=NONE label=(h=3 a=90 ' '); *<-amplitude;
proc gplot data=work.actual;
   plot py*period=1 r*period=2 / overlay noframe haxis=axis1 vaxis=axis2;
* Subscripts;
   note m=(45,1.5)pct h=3 'Period (f' m=(-0.25,-.75) h=1.75 'j';
   note m=(62.0,1.5) h=3 ')';
   note m=(3,54.5)pct h=3 angle=90 '^';
   note m=(3.25,55) angle=90 h=3  'a';
   note m=(4,56.5) angle=90 h=1.75  'j';
run; quit;
* Find significant frequencies;
data work.sig work.estvar;
   set work.actual;
   if r>py then do;
      dummy=1;
      pround=round(period,0.1);
	  output work.sig;
   end;
   else do;
      output work.estvar;
   end;
run;
* Get sum of squares for non=periodic terms;
proc univariate data=work.estvar noprint;
   by centre runit;
   var p_01;
   output out=work.sumerr sum=sum n=nord; * Sum I(w);
run;
* Get data length;
proc univariate data=work.tapdata noprint;
   by centre runit;
   var centre;
   output out=work.length n=n;
run;
data work.varest;
   merge work.sumerr(in=a) work.length;
   by centre runit;
   if a;
   m=(n/2);
   sumres=(sum/nord)*m; * Rescale sum;
   stdest=sqrt(sumres/n);* Sigma hat;
run;
%cntrname(&centre.,&runit.);
proc print data=work.varest noobs label;
   var sum n stdest;
   label sum='Sum of squares' n='n' stdest='Sigma estimate';
   format sum stdest 6.1;
run;
proc print data=work.sig noobs label;
   var pround py r;
   label pround='Period' py='limit';
   format py r 6.1;
run;
* Get annual estimate;
data work.annual;
   set work.actual(keep=centre runit period r py);
   if centre=28 then do; if period>=11.999 and period<=12.1; end;
   else do; if period=12; end;
run;
data work.addsig;
   merge work.annual work.varest(keep=centre runit n stdest);
   by centre runit;
   astar=r/stdest; * Standardised estimate;
run;
proc append data=work.addsig base=work.allall;
run;
%mend centrerun;
