/****************************************************************/
/*    NAME: kalperinon.sas                                      */
/*   TITLE: Remove trend from rates with Kalman filter then     */
/*          apply the periodogram with truncating or tapering   */
/*                                                              */
/*   PROCS: GPLOT, SPECTRA, IML                                 */
/*    DATA: MONICA (data.all)                                   */
/*  AUTHOR: AGB                                                 */
/*    DATE: 2/5/02                                              */
/*    USES: kalsmooth.sas                                       */
/*                                                              */
/****************************************************************/

libname data 'U:\SAS\data';
%include "U:\SAS\formats.sas";
%include "U:\SAS\fkappas.sas"; * Include spectral test program;
options nodate mprint symbolgen font='swiss' notes;
footnote1 &sysdate., &systime.;

** Set up data;
data work.gate(rename=(year=yronset));
*   set data.malerate;
*   if event='fatal';
*   set data.magespl;
*   if agex=2;
   set data.sumevent;
   if sex=1;
run;
data work.addtime;
   set work.gate;
   retain time 0;
   by centre runit;
   if first.runit then time=0;
   time=time+1;
run;

** Filter data - use kalsmooth.sas program to create work.allfilt;
%include "U:\SAS\kalsmooth.sas";

* Add time;
data work.addtime;
   set data.malefilt(drop=time);
   by centre runit;
   retain time 0;
   if first.runit then time=0;
   time=time+1;
run;
goptions reset=all;
%macro perisers(cent,repunit,var);
data work.centre;
   set work.addtime; 
   if centre=&cent. and runit in (&repunit.); 
run;
proc spectra data=work.centre out=work.peri p adjmean;
   by centre runit;
   var errs;
run;
* Get the variance for standardising;
proc univariate data=work.centre noprint;
   var errs;
   output out=work.errvar var=errvar;
run;
* Estimate the spectrum & standardise the periodogram;
proc iml;
   use work.peri var{centre runit period freq p_01};
   read all;
   use work.errvar var{errvar};
   read all;
   n=nrow(centre);
   pi=arcos(0)*2;
   s_01=J(n,1,0);
   h=4; * Bandwidth;
   p_01=p_01/2; * <- Correctly scale SAS periodogram;
   p_01=p_01/errvar; * Scale by error variance to give standard area across centres;
* Calculate weights;
   weight=J(1,h+h+1,0);
   do count=-h to h;
*      weight[1,count+h+1]=(h-abs(count))/h; * Triangular window;
      weight[1,count+h+1]=0.5*(1+cos(pi*count/h)); * Hanning window;
   end;
   sumw=weight*J(h+h+1,1,1);
* Mirror the data at the edges;
   head=J(h,1,0); tail=J(h,1,0);
   do count=0 to h-1;
      head[count+1,1]=p_01[h-count+1,1];
      tail[count+1,1]=p_01[n-count-1,1];
   end;
   pm_01=head//p_01//tail;
   do count=1 to n;
      s_01[count,1]=(weight*pm_01[h+count-h:h+count+h])/sumw;
   end;
* Output data;
   toout=centre||runit||period||freq||p_01||s_01;
   varnames={'centre' 'runit' 'period' 'freq' 'p_01' 's_01'};
   create work.spec from toout[colname=varnames];
   append from toout;
quit;
*goptions reset=all ftext=centxi htext=3 gunit=pct colors=(black) border;
filename graph1 "C:\My documents\Adrian\plots\sp&cent._&repunit..eps";
goptions reset=all ftext=centxi htext=3 gunit=pct colors=(black) gunit=pct noborder
    gsfname=graph1 noprompt gsfmode=replace device=PSLEPSF fontres=presentation dash;
symbol1 i=join color=grey value=NONE line=1;
symbol2 i=join color=black value=NONE line=2 width=4;
*legend1 value=(f=greek 'I(w)' 's(w)') label=NONE position=(top right inside) across=1 mode=share;
* Axes for period;
axis1 minor=NONE label=('Period') major=(h=2.5) order=(2 to 24 by 2) value=(h=2.5); *<-period;
axis2 minor=NONE label=(a=90 'I(f)') major=(h=2.5) value=(h=2.5); *<I(w);
*%cntrname(&cent.,&repunit.);
title; * No title for final output;
data work.chop;
   set work.spec;
   if freq>0;
run;
proc gplot data=work.chop;
*   plot p_01*period=1 s_01*period=2 / noframe overlay haxis=axis1 vaxis=axis2 href=12 legend=legend1;
   plot p_01*period=1 / noframe haxis=axis1 vaxis=axis2 href=12; * Just the periodogram;
run; quit;
* Append periodogram data;
proc append base=work.allperi data=work.chop;
run;
%mend perisers;
*%perisers(28,99,errs);

* Set up dummy data;
goptions reset=all;
data work.allperi;
   centre=0; runit=0; freq=0; period=0; p_01=0; s_01=0;
run;
%callcent(perisers,errs);
*%callcenf(perisers,errs); *<-women, excludes Switzerland;
* Remove dummy data;
data work.allperi;
   set work.allperi;
   if centre~=0;
   if period>=2 and period<=24;
run;
* Create permanent data set for other programs;
data data.perimale;
   set work.allperi;
run;

* Plot mean against f=12 value;
proc univariate data=work.gate noprint;
   var ratestd;
   by centre runit;
   output out=work.means mean=mean var=var;
run;
data work.annual work.biannual;
   set data.perimale;
   if period>=5.9 and period<=6.1 then output work.biannual;
   if period>=11.9 and period<=12.1 then output work.annual;
run;
*** Plot annual rate against average temp;
data work.addw; 
   merge work.annual(drop=freq period) work.weatherhighlow work.centnmsh;
*   merge work.biannual(drop=freq period) work.weatherhighlow work.centnmsh;
   by centre runit;
   diff=avehigh-avelow;
   if centre=47 then delete; * Remove Novosibirsk;
   logp=log(p_01);
run;
%macro plotweather(var);
goptions reset=all;
symbol1 i=NONE color=black value=PLUS h=3;
axis1 minor=NONE;
* Annotate data set;
data work.label;
   set work.addw;
   retain xsys '2' ysys '2' size 0.7;
   x=&var.;
   y=p_01;
   position='6';
   style='centxi';
   text=centname;
   h=2;
run;
proc gplot data=work.addw annotate=work.label;
   plot p_01*&var.=1 / haxis=axis1 /*vaxis=axis2*/ noframe;
run; quit;
%mend plotweather;
%plotweather(avelow);
%plotweather(avehigh);
%plotweather(diff);
proc corr data=work.addw;
   var p_01 logp avelow avehigh diff;
run; quit;
* Correlation with Kaunas and A.B.;
data work.without;
   set work.addw;
   if centre in (45,57) then delete;
run;
proc corr data=work.without;
   var p_01 logp avelow avehigh diff;
run; quit;
* Neat plot;
data work.neatlabel;
   set work.label;
   size=1.1;
   y=logp;
   if centre=18 then text='C.R.';
*   if centre=20 and runit=3 then position='4'; * Kuopio;
*   if centre=20 and runit=6 then position='2'; * Turku;
*   if centre=35 and runit=99 then position='7'; * TV;
*   if centre=46 and runit=97 then text='Moscow #1';
*   if centre=46 and runit=98 then text='Moscow #2';
run;
goptions reset=all;
filename graph1 "C:\My documents\Adrian\plots\tempannual.eps";
goptions reset=all ftext=centxi htext=2 gunit=pct noborder 
    gsfname=graph1 noprompt gsfmode=replace device=PSLEPSF fontres=presentation dash;
axis1 minor=NONE order=(5 to 35 by 5) value=('10' '15' '20' '25' '30') label=('Difference in average high and low temperatures (degrees C)');
*axis2 minor=NONE major=(number=8) order=(0 to 17 by 1) label=(a=90 'Degree of annual seasonality') value=(' ');
axis2 minor=NONE order=(-1.5 to 3 by 0.5) label=(a=90 'log(Degree of annual seasonality)') value=(' ' '-1' ' ' '0' ' ' '1' ' ' '2' ' ' '3');
symbol1 value=circle color=grey h=2 i=NONE;
proc gplot data=work.addw annotate=work.neatlabel;
*   plot p_01*diff=1 / haxis=axis1 vaxis=axis2 noframe;
   plot logp*diff=1 / haxis=axis1 vaxis=axis2 noframe;
run; quit;

* Table of significant frequencies;
%macro gettotab(cent,runit);
data work.centre;
   set data.malefilt;
   if centre=&cent. and runit=&runit.;
run;
* Test the residuals from the fit;
%fkappas(work.centre,errs);
data work.select(keep=period);
   set work.res;
*   if gprob<(0.05/12); * Bonferonni adjustment;
   if gprob<(0.05);
run;
data work.addinfo;
   set work.select;
   centre=&cent.; runit=&runit.; dummy=1;
run;
proc transpose data=work.addinfo out=work.oneline(drop=_name_);
   by centre runit;
   var dummy;
   id period;
run;
proc append base=work.totable data=work.oneline force;
run;
%mend gettotab;
data work.totable;
   centre=0; runit=0; _12=0; _44=0; _6=0; _2=0;
run;
* Macro to call centres and reporting units;
   %gettotab(10,99);
   %gettotab(11,99);
   %gettotab(12,1);
   %gettotab(12,2);
   %gettotab(15,1);
   %gettotab(17,1);
   %gettotab(18,99);
   %gettotab(19,1);
   %gettotab(20,2);
   %gettotab(20,3);
   %gettotab(20,6);
   %gettotab(23,99);
   %gettotab(24,99);
   %gettotab(26,99);
   %gettotab(28,99);
   %gettotab(32,99);
   %gettotab(33,1);
   %gettotab(34,1);
   %gettotab(35,99);
   %gettotab(36,99);
   %gettotab(37,1);
   %gettotab(39,3);
   %gettotab(40,1);
   %gettotab(43,99);
   %gettotab(45,1);
   %gettotab(46,97);
   %gettotab(46,98);
   %gettotab(49,1);
   %gettotab(50,1);
   %gettotab(50,3);
   %gettotab(54,1);
   %gettotab(55,1);
   %gettotab(57,1);
   %gettotab(59,1);
   %gettotab(60,99);
